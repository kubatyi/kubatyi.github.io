{"version":3,"sources":["layouts/Circle/index.js","layouts/Default/index.js","layouts/WithoutText/index.js","layouts/Rectangle/index.js","layouts/CircleWhite/index.js","layouts/Square/index.js","App.js","serviceWorker.js","index.js"],"names":["Circle","headlineText","secondaryText","sizes","Fragment","className","style","width","height","fontSize","id","Default","paddingBottom","marginTop","WithoutText","Rectangle","CircleWhite","marginLeft","marginRight","styles","MAPBOX_TOKEN","layoutOptions","key","text","value","frameSizeMap","App","useState","cityInputValue","setCityInputValue","cityDropdownItems","setCityDropdownItems","setHeadlineText","setSecondaryText","layout","setLayout","map","setMap","center","setCenter","frameSize","setFrameSize","cityInputRef","useRef","sendStateToParent","useCallback","state","zoom","getZoom","getCenter","window","parent","postMessage","JSON","stringify","useEffect","mapboxgl","remove","container","location","hash","substr","attributionControl","dragRotate","disable","touchZoomRotate","disableRotation","on","current","searchRef","addEventListener","e","onCityInputChange","target","data","parse","setStyle","size","axios","get","then","res","city","country_name","longitude","latitude","a","length","params","access_token","autocomplete","response","cities","features","el","place_name","country","context","join","Dropdown","ref","placeholder","fluid","search","selection","options","onChange","console","log","selectedCityObject","find","flyTo","speed","split","Input","label","disabled","maxScale","Boolean","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message"],"mappings":"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","file":"static/js/main.22e7a70d.chunk.js","sourcesContent":["import React from 'react';\nimport './index.scss';\n\nconst Circle = ({ headlineText, secondaryText, sizes }) => {\n  return (\n    <React.Fragment>\n      <div className=\"editor-wrapper circle\" style={{ width: sizes.width, height: sizes.height }}>\n        <div className=\"headline-text\" style={{ fontSize: headlineText }}>{headlineText}</div>\n        <div id=\"map\" style={{ width: `calc(${sizes.width} / 1.7)`, height: `calc(${sizes.width} / 1.7)` }}/>\n        <div className=\"secondary-text\" style={{ fontSize: secondaryText }}>{secondaryText}</div>\n      </div>\n    </React.Fragment>\n  )\n};\n\nexport default Circle;\n","import React from 'react';\nimport './index.scss';\n\nconst Default = ({ headlineText, secondaryText, sizes }) => {\n  return (\n    <React.Fragment>\n      <div className=\"editor-wrapper gradient\" style={{ width: sizes.width, height: sizes.height }}>\n        <div id=\"map\" />\n        <div className=\"text-wrapper\" style={{ paddingBottom: `calc(${sizes.height} / 18)` }}>\n          <div className=\"headline-text\" style={{ fontSize: sizes.headlineText }}>{headlineText}</div>\n          <div className=\"secondary-text\" style={{ fontSize: sizes.secondaryText, marginTop: `calc(${sizes.height} / 25)` }}>{secondaryText}</div>\n        </div>\n      </div>\n    </React.Fragment>\n  )\n};\n\nexport default Default;\n","import React from 'react';\nimport './index.scss';\n\nconst WithoutText = ({ sizes }) => {\n  return (\n    <React.Fragment>\n      <div className=\"editor-wrapper without-text\" style={{ width: sizes.width, height: sizes.height }}>\n        <div id=\"map\" />\n      </div>\n    </React.Fragment>\n  )\n};\n\nexport default WithoutText;\n","import React from 'react';\nimport './index.scss';\n\nconst Rectangle = ({ headlineText, secondaryText, sizes }) => {\n  return (\n    <React.Fragment>\n      <div className=\"editor-wrapper rectangle\" style={{ width: sizes.width, height: sizes.height }}>\n        <div id=\"map\" style={{ height: `calc(${sizes.height} / 1.45)` }}/>\n        <div className=\"text-wrapper\">\n          <div className=\"headline-text\" style={{ sizes: headlineText }}>{headlineText}</div>\n          <div className=\"secondary-text\" style={{ sizes: secondaryText }}>{secondaryText}</div>\n        </div>\n      </div>\n    </React.Fragment>\n  )\n};\n\nexport default Rectangle;\n","import React from 'react';\nimport './index.scss';\n\nconst CircleWhite = ({ headlineText, secondaryText, sizes }) => {\n  return (\n    <React.Fragment>\n      <div className=\"editor-wrapper circle-white\" style={{ width: sizes.width, height: sizes.height }}>\n        <div className=\"headline-text\" style={{ fontSize: headlineText }}>{headlineText}</div>\n        <div id=\"map\" style={{ width: `calc(${sizes.width} / 1.7)`, height: `calc(${sizes.width} / 1.7)` }}/>\n        <div className=\"secondary-text\" style={{ fontSize: secondaryText }}>{secondaryText}</div>\n      </div>\n    </React.Fragment>\n  )\n};\n\nexport default CircleWhite;\n","import React from 'react';\nimport './index.scss';\n\nconst Rectangle = ({ headlineText, secondaryText, sizes }) => {\n  return (\n    <React.Fragment>\n      <div className=\"editor-wrapper square\" style={{ width: sizes.width, height: sizes.height }}>\n        <div id=\"map\" style={{ width: `calc(${sizes.width} / 1.5)`, height: `calc(${sizes.width} / 1.5)`, marginLeft: 'auto', marginRight: 'auto', marginTop: `calc(${sizes.height} / 14)` }}/>\n        <div className=\"text-wrapper\">\n          <div className=\"headline-text\">{headlineText}</div>\n          <div className=\"secondary-text\">{secondaryText}</div>\n        </div>\n      </div>\n    </React.Fragment>\n  )\n};\n\nexport default Rectangle;\n","import React, { useState, useEffect, useRef, useCallback, useReducer } from 'react';\nimport './App.scss';\nimport * as mapboxgl from 'mapbox-gl';\nimport AutoScale from 'react-auto-scale';\nimport axios from 'axios';\nimport { Dropdown, Input } from 'semantic-ui-react'\nimport Circle from \"./layouts/Circle/index\";\nimport 'semantic-ui-css/semantic.min.css'\nimport Default from \"./layouts/Default\";\nimport WithoutText from \"./layouts/WithoutText/index\";\nimport Rectangle from \"./layouts/Rectangle\";\nimport CircleWhite from \"./layouts/CircleWhite\";\nimport Square from \"./layouts/Square\";\n\nconst styles = {\n  'blue': 'mapbox://styles/kubatyi/ckdn1lgk80nbp1il7tbjdqnxm',\n  'red': 'mapbox://styles/kubatyi/ckdo7qi431s7n1io4ya13jmvq',\n  'green': 'mapbox://styles/kubatyi/ckdogvd6721wt1ioii4wlls2a',\n  'simple': 'mapbox://styles/kubatyi/ckdoglnu937ix1it80v32fsno',\n  'colorful': 'mapbox://styles/kubatyi/ckev6d3slae0019qqpby7wmod'\n};\n\nconst MAPBOX_TOKEN = 'pk.eyJ1Ijoia3ViYXR5aSIsImEiOiJjazA2cmtleDEwMTc5M2NwZ3N3Z2plcGdnIn0.Nio3ZaFI2366HS56tW28wQ';\n\nconst layoutOptions = [\n  {\n    key: '1',\n    text: 'Gradient',\n    value: 'gradient'\n  },\n  {\n    key: '2',\n    text: 'Without Text',\n    value: 'without_text'\n  },\n  {\n    key: '3',\n    text: 'Circle',\n    value: 'circle'\n  },\n  {\n    key: '4',\n    text: 'Circle (Light)',\n    value: 'circle-white'\n  },\n  {\n    key: '5',\n    text: 'Rectangle',\n    value: 'rectangle'\n  },\n  {\n    key: '6',\n    text: 'Square',\n    value: 'square'\n  }\n];\n\nconst frameSizeMap = {\n  '8x10 (in)': {\n    width: '8in',\n    height: '10in',\n    headlineText: 8 * 8.75,\n    secondaryText: 8 * 3.75\n  },\n  '12x16 (in)': {\n    width: '12in',\n    height: '16in',\n    headlineText: 12 * 8.75,\n    secondaryText: 12 * 3.75\n  },\n  '12x18 (in)': {\n    width: '12in',\n    height: '18in',\n    headlineText: 12 * 8.75,\n    secondaryText: 12 * 3.75\n  },\n  '16x20 (in)': {\n    width: '16in',\n    height: '20in',\n    headlineText: 16 * 8.75,\n    secondaryText: 16 * 3.75\n  },\n  '18x24 (in)': {\n    width: '18in',\n    height: '24in',\n    headlineText: 18 * 8.75,\n    secondaryText: 18 * 3.75\n  },\n  '24x36 (in)': {\n    width: '24in',\n    height: '36in',\n    headlineText: 24 * 8.75,\n    secondaryText: 36 * 3.75\n  }\n};\n\nconst App = () => {\n  const [cityInputValue, setCityInputValue] = useState('');\n  const [cityDropdownItems, setCityDropdownItems] = useState([]);\n  const [headlineText, setHeadlineText] = useState('');\n  const [secondaryText, setSecondaryText] = useState('');\n  const [layout, setLayout] = useState('gradient');\n  const [map, setMap] = useState(null);\n  const [center, setCenter] = useState([0, 0]);\n  const [frameSize, setFrameSize] = useState('8x10 (in)');\n  const cityInputRef = useRef();\n\n  const sendStateToParent = useCallback(() => {\n    if (map) {\n      const state = {\n        zoom: map.getZoom(),\n        center: map.getCenter(),\n        headlineText,\n        secondaryText,\n        layout\n      };\n      window.parent.postMessage(JSON.stringify(state), '*');\n    }\n  }, [map, headlineText, secondaryText, layout]);\n\n  useEffect(() => {\n    mapboxgl.accessToken = MAPBOX_TOKEN;\n\n    if (map) {\n      map.remove();\n    }\n    setMap(new mapboxgl.Map({\n      container: 'map',\n      center: center,\n      zoom: 11,\n      style: styles[window.location.hash.substr(1)],\n      attributionControl: false\n    }));\n\n  }, [layout, frameSize]);\n\n  useEffect(() => {\n    if (map) {\n      map.setCenter(center);\n    }\n  }, [map, center]);\n\n  useEffect(() => {\n    if (map) {\n      map.dragRotate.disable();\n\n      map.touchZoomRotate.disableRotation();\n\n      map.on('touchend', sendStateToParent);\n      map.on('zoomend', sendStateToParent);\n      map.on('dragend', sendStateToParent);\n\n      if (cityInputRef.current) {\n        cityInputRef.current.searchRef.current.addEventListener('keyup', (e) => {\n          onCityInputChange(e.target.value)\n        })\n      }\n\n      window.addEventListener('message', (e) => {\n        const data = JSON.parse(e.data);\n\n        if (data.style) {\n          if (map) {\n            map.setStyle(styles[data.style]);\n            window.location.hash = `#${data.style}`\n          }\n        }\n\n        if (data.size) {\n          if (map) {\n            setFrameSize(data.size);\n          }\n        }\n      });\n    }\n  }, [map, sendStateToParent]);\n\n  useEffect(() => {\n    axios.get('https://api.ipapi.com/api/check?access_key=6d4c0f09aa78ad103b4927c2a7f00828')\n      .then(res => {\n        setHeadlineText(res.data.city);\n        setSecondaryText(res.data.country_name);\n        setCenter([res.data.longitude, res.data.latitude]);\n      })\n      .catch(e => {\n        setHeadlineText('New York');\n        setSecondaryText('United States');\n        setCenter([-73.9808, 40.7648])\n      });\n  }, []);\n\n  useEffect(() => sendStateToParent(), [map, headlineText, secondaryText, layout, center]);\n\n  const onCityInputChange = async value => {\n    setCityInputValue(value);\n\n    if (value.length) {\n      const response = await axios.get(`http://api.mapbox.com/geocoding/v5/mapbox.places/${value}.json`, {\n        params: {\n          access_token: MAPBOX_TOKEN,\n          autocomplete: true,\n        }\n      });\n\n      const cities = response.data.features.map(el => {\n        return {\n          key: el.id,\n          value: el.place_name,\n          text: el.place_name,\n          center: el.center,\n          country: el.context ? el.context.map(el => el.text).join(', ') : ''\n        }\n      });\n\n      setCityDropdownItems(cities);\n    }\n  };\n\n  return (\n    <div id=\"map-editor\">\n      <div className=\"inputs-wrapper\">\n        <Dropdown\n          className=\"city-dropdown\"\n          ref={cityInputRef}\n          placeholder='Search City'\n          fluid\n          search\n          selection\n          value={cityInputValue}\n          options={cityDropdownItems}\n          onChange={(e, data) => {\n            console.log(data);\n            const selectedCityObject = cityDropdownItems.find(el => el.text === data.value);\n            map.flyTo({\n              center: selectedCityObject.center,\n              zoom: 12,\n              speed: 3\n            });\n            console.log(selectedCityObject);\n            setCenter(selectedCityObject.center);\n            setHeadlineText(selectedCityObject.value.split(',')[0]);\n            setSecondaryText(selectedCityObject.country);\n            setCityInputValue(data.text);\n          }}\n        />\n        <Dropdown\n          className=\"city-dropdown\"\n          placeholder='Select Layout'\n          fluid\n          search\n          selection\n          options={layoutOptions}\n          onChange={(e, data) => setLayout(data.value)}\n        />\n        <Input fluid label=\"Headline Text\" disabled={layout === 'without_text'} value={headlineText} onChange={e => setHeadlineText(e.target.value)} />\n        <Input fluid label=\"Secondary Text\" disabled={layout === 'without_text'} value={secondaryText} onChange={e => setSecondaryText(e.target.value)} />\n      </div>\n\n      <AutoScale maxScale={1}>\n        <React.Fragment>\n          {layout === 'gradient' && <Default headlineText={headlineText} secondaryText={secondaryText} sizes={frameSizeMap[frameSize]}/>}\n          {layout === 'circle' && <Circle headlineText={headlineText} secondaryText={secondaryText} sizes={frameSizeMap[frameSize]}/>}\n          {layout === 'circle-white' && <CircleWhite headlineText={headlineText} secondaryText={secondaryText} sizes={frameSizeMap[frameSize]}/>}\n          {layout === 'without_text' && <WithoutText sizes={frameSizeMap[frameSize]}/>}\n          {layout === 'rectangle' && <Rectangle headlineText={headlineText} secondaryText={secondaryText} sizes={frameSizeMap[frameSize]}/>}\n          {layout === 'square' && <Square headlineText={headlineText} secondaryText={secondaryText} sizes={frameSizeMap[frameSize]}/>}\n        </React.Fragment>\n      </AutoScale>\n    </div>\n  )\n};\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}